/* ===== 基础样式 ===== */
:root {
    --primary-color: #6c63ff;
    --secondary-color: #ff6584;
    --accent-color: #43cea2;
    --dark-color: #2c3e50;
    --light-color: #f8f9fa;
    --gray-color: #6c757d;
    --success-color: #28a745;
    --info-color: #17a2b8;
    --warning-color: #ffc107;
    --danger-color: #dc3545;
    --font-primary: 'Poppins', 'PingFang SC', 'Microsoft YaHei', sans-serif;
    --transition: all 0.3s ease;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
    font-size: 62.5%;
}

body {
    font-family: var(--font-primary);
    line-height: 1.6;
    color: var(--dark-color);
    overflow-x: hidden;
    background-color: var(--light-color);
    font-size: 1.6rem;
}

section {
    padding: 10rem 0;
    position: relative;
}

/* 隐藏滚动条但保持功能 */
body::-webkit-scrollbar {
    width: 0.5rem;
}

body::-webkit-scrollbar-track {
    background: transparent;
}

body::-webkit-scrollbar-thumb {
    background: var(--primary-color);
    border-radius: 1rem;
}

.container {
    width: 100%;
    max-width: 120rem;
    margin: 0 auto;
    padding: 0 2rem;
}

ul {
    list-style: none;
}

a {
    text-decoration: none;
    color: inherit;
    transition: var(--transition);
}

a:hover {
    color: var(--primary-color);
}

.btn {
    display: inline-block;
    padding: 1.2rem 3rem;
    border-radius: 5rem;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 1.4rem;
    letter-spacing: 0.1rem;
    cursor: pointer;
    transition: var(--transition);
    border: none;
    outline: none;
    position: relative;
    overflow: hidden;
    z-index: 1;
}

.btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    background: rgba(255, 255, 255, 0.2);
    transition: all 0.5s;
    z-index: -1;
}

.btn:hover::before {
    width: 100%;
}

.btn-primary {
    background: var(--primary-color);
    color: white;
    box-shadow: 0 4px 15px rgba(108, 99, 255, 0.3);
}

.btn-outline {
    background: transparent;
    color: var(--primary-color);
    border: 2px solid var(--primary-color);
    margin-left: 1.5rem;
}

.btn-outline:hover {
    background: var(--primary-color);
    color: white;
}

.section-header {
    text-align: center;
    margin-bottom: 6rem;
}

.section-title {
    font-size: 3.6rem;
    font-weight: 700;
    margin-bottom: 1rem;
    position: relative;
    display: inline-block;
}

.section-underline {
    width: 8rem;
    height: 0.4rem;
    background: var(--primary-color);
    margin: 0 auto;
    position: relative;
    overflow: hidden;
}

.section-underline::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.8), transparent);
    animation: sweep 2s infinite;
}

@keyframes sweep {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

/* ===== 加载动画 ===== */
.loader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--light-color);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: opacity 0.5s, visibility 0.5s;
}

.loader-content {
    text-align: center;
}

.loader-spinner {
    width: 6rem;
    height: 6rem;
    border: 0.5rem solid rgba(108, 99, 255, 0.2);
    border-top: 0.5rem solid var(--primary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 2rem;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.loader h2 {
    color: var(--primary-color);
    font-size: 2.4rem;
    letter-spacing: 0.3rem;
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% {
        opacity: 0.5;
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0.5;
    }
}

/* ===== 粒子背景 ===== */
.background-effect {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0.6;
}

/* ===== 导航栏 ===== */
.header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    padding: 2rem 0;
    transition: all 0.5s;
}

.header.sticky {
    background: rgba(255, 255, 255, 0.95);
    padding: 1.5rem 0;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
}

.navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logo {
    font-size: 2.4rem;
    font-weight: 700;
    color: var(--primary-color);
    text-transform: uppercase;
    letter-spacing: 0.2rem;
}

.nav-links {
    display: flex;
    gap: 3rem;
}

.nav-link {
    position: relative;
    font-weight: 500;
    font-size: 1.6rem;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    padding: 0.5rem;
}

.nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--primary-color);
    transition: width 0.3s;
}

.nav-link:hover::after,
.nav-link.active::after {
    width: 100%;
}

.hamburger {
    display: none;
    cursor: pointer;
}

.bar {
    width: 2.5rem;
    height: 0.3rem;
    background: var(--dark-color);
    margin: 0.5rem 0;
    transition: var(--transition);
}

/* ===== 英雄区 ===== */
.hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    position: relative;
    overflow: hidden;
    background: radial-gradient(circle at 10% 20%, rgba(253, 239, 249, 1) 0%, rgba(237, 237, 255, 1) 100%);
}

.hero-content {
    flex: 1;
    padding-right: 3rem;
}

.hero h1 {
    font-size: 5rem;
    font-weight: 700;
    margin-bottom: 2rem;
    line-height: 1.2;
}

.highlight {
    color: var(--primary-color);
    position: relative;
}

.highlight::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0.6rem;
    background: var(--secondary-color);
    z-index: -1;
    opacity: 0.5;
}

.typewriter {
    font-size: 2.4rem;
    color: var(--dark-color);
    margin-bottom: 2rem;
    height: 3rem;
}

.cursor {
    animation: blink 1s infinite;
}

@keyframes blink {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0;
    }
}

.hero-description {
    font-size: 1.8rem;
    color: var(--gray-color);
    margin-bottom: 3rem;
    max-width: 60rem;
}

.cta-buttons {
    margin-bottom: 3rem;
}

.social-icons {
    display: flex;
    gap: 1.5rem;
}

.social-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    background: white;
    color: var(--gray-color);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: var(--transition);
}

.social-icon:hover {
    transform: translateY(-0.5rem);
    background: var(--primary-color);
    color: white;
}

.hero-image {
    flex: 1;
    position: relative;
}

/* 3D 魔方效果 */
.cube-wrapper {
    position: relative;
    width: 30rem;
    height: 30rem;
    margin: 0 auto;
    perspective: 100rem;
    cursor: grab;
    transition: all 1s ease;
}

.cube-wrapper:active {
    cursor: grabbing;
}

/* 魔方悬停时展开效果 */
.cube-wrapper.expanded {
    transform: scale(1.2);
}

/* 小宇宙容器 */
.universe-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20rem;
    height: 20rem;
    border-radius: 50%;
    z-index: 1;
    opacity: 0;
    pointer-events: none;
    transition: opacity 1s ease;
    overflow: hidden;
}

/* 展开时小宇宙的显示 */
.cube-wrapper.expanded .universe-container {
    opacity: 1;
}

.cube {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.8s;
}

/* 魔方展开状态 */
.cube.expanded {
    transform: scale(0.8);
}

/* 展开时各个面的位置 */
.cube.expanded .front {
    transform: translateZ(25rem);
}

.cube.expanded .back {
    transform: rotateY(180deg) translateZ(25rem);
}

.cube.expanded .top {
    transform: rotateX(90deg) translateZ(25rem);
}

.cube.expanded .bottom {
    transform: rotateX(-90deg) translateZ(25rem);
}

.cube.expanded .left {
    transform: rotateY(-90deg) translateZ(25rem);
}

.cube.expanded .right {
    transform: rotateY(90deg) translateZ(25rem);
}

/* 添加闪烁效果 */
.cube-flash {
    animation: flash 0.5s;
}

@keyframes flash {
    0%, 100% { filter: brightness(1); }
    50% { filter: brightness(1.5); }
}

.cube-face {
    position: absolute;
    width: 30rem;
    height: 30rem;
    background: rgba(108, 99, 255, 0.1);
    border: 2px solid var(--primary-color);
    box-shadow: 0 0 30px rgba(108, 99, 255, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s ease;
    overflow: hidden;
}

/* 3D佛像模型容器样式 */
.buddha-model-container {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    pointer-events: none;
}

/* 魔方面的悬停效果 */
.cube-face-hover {
    transform-origin: center;
    transform: scale(1.1) translateZ(2rem);
    background: rgba(108, 99, 255, 0.2);
    box-shadow: 0 0 40px rgba(108, 99, 255, 0.7);
    border-width: 3px;
}

/* 魔方面的点击激活效果 */
.cube-face-active {
    background: rgba(255, 101, 132, 0.2);
    border-color: var(--secondary-color);
    box-shadow: 0 0 40px rgba(255, 101, 132, 0.7);
}

/* 为每个面添加图标 */
.cube-face::after {
    content: '';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    font-size: 5rem;
    color: var(--primary-color);
    opacity: 0.7;
    transition: all 0.3s ease;
}

.front::after {
    content: '\f121'; /* 代码图标 */
}

.back::after {
    content: '\f0ac'; /* 全球图标 */
}

.top::after {
    content: '\f164'; /* 点赞图标 */
}

.bottom::after {
    content: '\f086'; /* 评论图标 */
}

.left::after {
    content: '\f19d'; /* 毕业帽图标 */
}

.right::after {
    content: '\f0eb'; /* 灯泡图标 */
}

.cube-face:hover::after {
    transform: scale(1.2);
    opacity: 1;
}

.cube-face::before {
    content: '';
    position: absolute;
    width: 80%;
    height: 80%;
    border: 2px dashed rgba(108, 99, 255, 0.3);
    z-index: -1;
}

/* 每个面添加文字 */
.cube-face span {
    position: absolute;
    bottom: 3rem;
    font-size: 1.8rem;
    font-weight: bold;
    color: var(--dark-color);
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    opacity: 0;
    transform: translateY(2rem);
    transition: all 0.3s ease;
}

.cube-face:hover span {
    opacity: 1;
    transform: translateY(0);
}

.front span::before {
    content: '编程技能';
}

.back span::before {
    content: '全球视野';
}

.top span::before {
    content: '优秀作品';
}

.bottom span::before {
    content: '用户评价';
}

.left span::before {
    content: '教育背景';
}

.right span::before {
    content: '创新思维';
}

/* 添加脉冲动画 */
@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 101, 132, 0.7);
    }
    70% {
        box-shadow: 0 0 0 20px rgba(255, 101, 132, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 101, 132, 0);
    }
}

.front {
    transform: translateZ(15rem);
}

.back {
    transform: rotateY(180deg) translateZ(15rem);
}

.top {
    transform: rotateX(90deg) translateZ(15rem);
}

.bottom {
    transform: rotateX(-90deg) translateZ(15rem);
}

.left {
    transform: rotateY(-90deg) translateZ(15rem);
}

.right {
    transform: rotateY(90deg) translateZ(15rem);
}

/* 保留原来的自动旋转动画定义，但不应用于.cube */
@keyframes rotate {
    0% {
        transform: rotateX(0) rotateY(0) rotateZ(0);
    }
    100% {
        transform: rotateX(360deg) rotateY(720deg) rotateZ(360deg);
    }
}

/* 故障文字效果 */
.glitch-text {
    position: relative;
}

.glitch-text::before,
.glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch-text::before {
    left: 2px;
    text-shadow: -2px 0 var(--secondary-color);
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim-1 5s infinite linear alternate-reverse;
}

.glitch-text::after {
    left: -2px;
    text-shadow: -2px 0 var(--accent-color);
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim-2 5s infinite linear alternate-reverse;
}

@keyframes glitch-anim-1 {
    0% {
        clip: rect(25px, 9999px, 40px, 0);
    }
    25% {
        clip: rect(25px, 9999px, 30px, 0);
    }
    50% {
        clip: rect(65px, 9999px, 85px, 0);
    }
    75% {
        clip: rect(15px, 9999px, 15px, 0);
    }
    100% {
        clip: rect(25px, 9999px, 5px, 0);
    }
}

@keyframes glitch-anim-2 {
    0% {
        clip: rect(65px, 9999px, 75px, 0);
    }
    25% {
        clip: rect(45px, 9999px, 50px, 0);
    }
    50% {
        clip: rect(15px, 9999px, 45px, 0);
    }
    75% {
        clip: rect(65px, 9999px, 85px, 0);
    }
    100% {
        clip: rect(85px, 9999px, 95px, 0);
    }
}

/* 鼠标滚动指示器 */
.scroll-indicator {
    position: absolute;
    bottom: 5rem;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
    z-index: 10;
}

.mouse {
    width: 3.5rem;
    height: 6rem;
    border: 2px solid var(--dark-color);
    border-radius: 2rem;
    margin: 0 auto 1rem;
    position: relative;
}

.wheel {
    width: 0.8rem;
    height: 0.8rem;
    background: var(--primary-color);
    border-radius: 50%;
    position: absolute;
    top: 0.8rem;
    left: 50%;
    transform: translateX(-50%);
    animation: mouseWheel 1.5s infinite;
}

@keyframes mouseWheel {
    0% {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateX(-50%) translateY(3rem);
    }
}

.arrow {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}

.arrow span {
    display: block;
    width: 1.5rem;
    height: 1.5rem;
    border-bottom: 2px solid var(--dark-color);
    border-right: 2px solid var(--dark-color);
    transform: rotate(45deg);
    animation: arrowDown 1.5s infinite;
}

.arrow span:nth-child(2) {
    animation-delay: 0.2s;
}

.arrow span:nth-child(3) {
    animation-delay: 0.4s;
}

@keyframes arrowDown {
    0% {
        opacity: 0;
        transform: rotate(45deg) translate(-0.5rem, -0.5rem);
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0;
        transform: rotate(45deg) translate(0.5rem, 0.5rem);
    }
}

/* ===== 技能部分 ===== */
.skills {
    background: #f9fafb;
    position: relative;
    overflow: hidden;
}

.skills::before {
    content: '';
    position: absolute;
    width: 20rem;
    height: 20rem;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(108, 99, 255, 0.05), rgba(108, 99, 255, 0.02));
    top: 10%;
    right: -10rem;
}

.skills::after {
    content: '';
    position: absolute;
    width: 30rem;
    height: 30rem;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(67, 206, 162, 0.05), rgba(67, 206, 162, 0.02));
    bottom: -15rem;
    left: -15rem;
}

.skills-content {
    display: flex;
    flex-direction: column;
    gap: 5rem;
    position: relative;
    z-index: 1;
}

.skill-category {
    margin-bottom: 2rem;
}

.skill-category h3 {
    font-size: 2.4rem;
    font-weight: 600;
    margin-bottom: 3rem;
    text-align: center;
    position: relative;
    display: inline-block;
    left: 50%;
    transform: translateX(-50%);
}

.skill-category h3::after {
    content: '';
    position: absolute;
    bottom: -0.8rem;
    left: 0;
    width: 100%;
    height: 0.3rem;
    background: var(--primary-color);
    opacity: 0.5;
}

.skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(25rem, 1fr));
    gap: 3rem;
}

.skill-item {
    background: white;
    border-radius: 1rem;
    padding: 3rem 2rem;
    text-align: center;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: var(--transition);
    position: relative;
    overflow: hidden;
}

.skill-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0.3rem;
    background: var(--primary-color);
    transform: scaleX(0);
    transition: transform 0.5s;
    transform-origin: left;
}

.skill-item:hover {
    transform: translateY(-0.5rem);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.skill-item:hover::before {
    transform: scaleX(1);
}

.skill-icon {
    font-size: 3.6rem;
    color: var(--primary-color);
    margin-bottom: 1.5rem;
}

.skill-item h4 {
    font-size: 1.8rem;
    font-weight: 600;
    margin-bottom: 2rem;
}

.skill-bar {
    width: 100%;
    height: 0.8rem;
    background: #e9ecef;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    overflow: hidden;
}

.skill-progress {
    height: 100%;
    border-radius: 0.5rem;
    background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
    position: relative;
    transform-origin: left;
    animation: skillProgress 1.5s ease-out forwards;
}

@keyframes skillProgress {
    0% {
        transform: scaleX(0);
    }
    100% {
        transform: scaleX(1);
    }
}

.skill-percentage {
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--primary-color);
}

/* 技能卡片悬停效果 */
.skill-item[data-skill="HTML5"]:hover .skill-icon {
    color: #e34f26;
}

.skill-item[data-skill="CSS3"]:hover .skill-icon {
    color: #1572b6;
}

.skill-item[data-skill="JavaScript"]:hover .skill-icon {
    color: #f7df1e;
}

.skill-item[data-skill="React"]:hover .skill-icon {
    color: #61dafb;
}

.skill-item[data-skill="Node.js"]:hover .skill-icon {
    color: #339933;
}

.skill-item[data-skill="Python"]:hover .skill-icon {
    color: #3776ab;
}

.skill-item[data-skill="Database"]:hover .skill-icon {
    color: #336791;
}

.skill-item[data-skill="API"]:hover .skill-icon {
    color: #00c7b7;
}

/* ===== 项目部分 ===== */
.projects {
    background: white;
    position: relative;
    overflow: hidden;
}

.project-filters {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 4rem;
}

.filter-btn {
    padding: 0.8rem 2rem;
    background: transparent;
    border: 2px solid var(--primary-color);
    border-radius: 3rem;
    color: var(--dark-color);
    font-size: 1.4rem;
    font-weight: 500;
    cursor: pointer;
    transition: var(--transition);
}

.filter-btn:hover,
.filter-btn.active {
    background: var(--primary-color);
    color: white;
}

.projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(35rem, 1fr));
    gap: 3rem;
}

.project-card {
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: var(--transition);
    position: relative;
    background: white;
}

.project-card:hover {
    transform: translateY(-1rem);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.project-image {
    position: relative;
    overflow: hidden;
    height: 25rem;
}

.project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s;
}

.project-card:hover .project-image img {
    transform: scale(1.1);
}

.project-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(44, 62, 80, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.5s;
}

.project-card:hover .project-overlay {
    opacity: 1;
}

.project-links {
    display: flex;
    gap: 2rem;
}

.project-link {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 4.5rem;
    height: 4.5rem;
    background: white;
    border-radius: 50%;
    color: var(--dark-color);
    font-size: 1.8rem;
    transform: translateY(2rem);
    opacity: 0;
    transition: all 0.3s;
}

.project-card:hover .project-link {
    transform: translateY(0);
    opacity: 1;
}

.project-card:hover .project-link:nth-child(2) {
    transition-delay: 0.1s;
}

.project-link:hover {
    background: var(--primary-color);
    color: white;
}

.project-info {
    padding: 2.5rem;
}

.project-title {
    font-size: 2rem;
    font-weight: 600;
    margin-bottom: 1rem;
}

.project-desc {
    font-size: 1.4rem;
    color: var(--gray-color);
    margin-bottom: 1.5rem;
    line-height: 1.6;
}

.project-tech {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.tech-tag {
    padding: 0.5rem 1.2rem;
    background: #f1f5f9;
    border-radius: 2rem;
    font-size: 1.2rem;
    font-weight: 500;
    color: var(--primary-color);
}

/* ===== 联系部分 ===== */
.contact {
    background: #f9fafb;
    position: relative;
    overflow: hidden;
}

.contact::before {
    content: '';
    position: absolute;
    bottom: -10rem;
    right: -10rem;
    width: 25rem;
    height: 25rem;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(108, 99, 255, 0.05), rgba(108, 99, 255, 0.02));
}

.contact-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));
    gap: 5rem;
}

.contact-info {
    display: flex;
    flex-direction: column;
    gap: 3rem;
}

.contact-card {
    display: flex;
    align-items: center;
    gap: 2rem;
    padding: 2.5rem;
    background: white;
    border-radius: 1rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: var(--transition);
}

.contact-card:hover {
    transform: translateY(-0.5rem);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.contact-icon {
    width: 5rem;
    height: 5rem;
    border-radius: 50%;
    background: rgba(108, 99, 255, 0.1);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    color: var(--primary-color);
}

.contact-details h3 {
    font-size: 1.8rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
}

.contact-details p {
    font-size: 1.5rem;
    color: var(--gray-color);
}

.contact-form-container {
    background: white;
    border-radius: 1rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    padding: 4rem;
}

.contact-form {
    display: flex;
    flex-direction: column;
    gap: 2.5rem;
}

.form-group {
    position: relative;
    margin-bottom: 1rem;
}

.form-control {
    width: 100%;
    padding: 1.2rem 0;
    font-size: 1.6rem;
    border: none;
    outline: none;
    background: transparent;
    color: var(--dark-color);
    font-family: var(--font-primary);
}

.form-control:focus + label,
.form-control:valid + label {
    top: -1.2rem;
    left: 0;
    font-size: 1.2rem;
    color: var(--primary-color);
}

.form-line {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: #e9ecef;
    transition: var(--transition);
}

.form-control:focus ~ .form-line,
.form-control:valid ~ .form-line {
    height: 2px;
    background: var(--primary-color);
}

.form-group label {
    position: absolute;
    top: 1.2rem;
    left: 0;
    font-size: 1.6rem;
    color: var(--gray-color);
    pointer-events: none;
    transition: var(--transition);
}

textarea.form-control {
    min-height: 12rem;
    resize: none;
}

.contact-form .btn {
    align-self: flex-start;
    margin-top: 1rem;
}

/* ===== 页脚 ===== */
.footer {
    background: var(--dark-color);
    color: white;
    padding: 6rem 0 2rem;
    position: relative;
    overflow: hidden;
}

.footer-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
    gap: 5rem;
    margin-bottom: 4rem;
}

.footer-logo h2 {
    font-size: 2.4rem;
    font-weight: 700;
    margin-bottom: 1rem;
}

.footer-logo p {
    font-size: 1.6rem;
    color: rgba(255, 255, 255, 0.7);
}

.footer-links h3,
.footer-social h3 {
    font-size: 1.8rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    position: relative;
    display: inline-block;
}

.footer-links h3::after,
.footer-social h3::after {
    content: '';
    position: absolute;
    bottom: -0.8rem;
    left: 0;
    width: 3rem;
    height: 2px;
    background: var(--primary-color);
}

.footer-links ul {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.footer-links a {
    font-size: 1.5rem;
    color: rgba(255, 255, 255, 0.7);
    transition: var(--transition);
}

.footer-links a:hover {
    color: var(--primary-color);
    padding-left: 0.5rem;
}

.footer-social .social-icons {
    margin-top: 1.5rem;
}

.footer-social .social-icon {
    background: rgba(255, 255, 255, 0.1);
    color: white;
}

.footer-social .social-icon:hover {
    background: var(--primary-color);
}

.footer-bottom {
    text-align: center;
    padding-top: 2rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    font-size: 1.4rem;
    color: rgba(255, 255, 255, 0.7);
}

/* ===== 回到顶部按钮 ===== */
.back-to-top {
    position: fixed;
    bottom: 3rem;
    right: 3rem;
    width: 4.5rem;
    height: 4.5rem;
    background: var(--primary-color);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 1.8rem;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(108, 99, 255, 0.3);
    opacity: 0;
    visibility: hidden;
    transition: all 0.5s;
    z-index: 999;
}

.back-to-top.active {
    opacity: 1;
    visibility: visible;
}

.back-to-top:hover {
    background: var(--dark-color);
    transform: translateY(-0.5rem);
}

/* ===== 响应式设计 ===== */
@media (max-width: 1200px) {
    html {
        font-size: 60%;
    }
}

@media (max-width: 992px) {
    html {
        font-size: 57.5%;
    }

    .hero-content,
    .hero-image {
        flex: initial;
        width: 100%;
    }

    .hero {
        flex-direction: column;
        text-align: center;
        padding: 15rem 0 5rem;
    }

    .hero-content {
        margin-bottom: 5rem;
        padding-right: 0;
    }

    .social-icons {
        justify-content: center;
    }

    .cube-wrapper {
        width: 25rem;
        height: 25rem;
    }

    .cube-face {
        width: 25rem;
        height: 25rem;
    }

    .front,
    .back {
        transform: translateZ(12.5rem);
    }

    .back {
        transform: rotateY(180deg) translateZ(12.5rem);
    }

    .top {
        transform: rotateX(90deg) translateZ(12.5rem);
    }

    .bottom {
        transform: rotateX(-90deg) translateZ(12.5rem);
    }

    .left {
        transform: rotateY(-90deg) translateZ(12.5rem);
    }

    .right {
        transform: rotateY(90deg) translateZ(12.5rem);
    }
}

@media (max-width: 768px) {
    html {
        font-size: 55%;
    }

    .nav-links {
        position: fixed;
        top: 0;
        left: -100%;
        width: 70%;
        height: 100%;
        background: white;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 4rem;
        transition: all 0.5s;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .nav-links.active {
        left: 0;
    }

    .hamburger {
        display: block;
        z-index: 1001;
    }

    .hamburger.active .bar:nth-child(1) {
        transform: translateY(0.8rem) rotate(45deg);
    }

    .hamburger.active .bar:nth-child(2) {
        opacity: 0;
    }

    .hamburger.active .bar:nth-child(3) {
        transform: translateY(-0.8rem) rotate(-45deg);
    }

    .projects-grid,
    .skills-grid {
        grid-template-columns: repeat(auto-fill, minmax(25rem, 1fr));
    }

    .contact-content {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 576px) {
    html {
        font-size: 52.5%;
    }

    .hero h1 {
        font-size: 4rem;
    }

    .typewriter {
        font-size: 2rem;
    }

    .section-title {
        font-size: 3rem;
    }

    .contact-form-container {
        padding: 3rem 2rem;
    }

    .btn {
        padding: 1rem 2.5rem;
    }

    .btn-outline {
        margin-left: 0;
        margin-top: 1.5rem;
    }

    .cta-buttons {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1.5rem;
    }

    .cube-wrapper {
        width: 20rem;
        height: 20rem;
    }

    .cube-face {
        width: 20rem;
        height: 20rem;
    }

    .front,
    .back {
        transform: translateZ(10rem);
    }

    .back {
        transform: rotateY(180deg) translateZ(10rem);
    }

    .top {
        transform: rotateX(90deg) translateZ(10rem);
    }

    .bottom {
        transform: rotateX(-90deg) translateZ(10rem);
    }

    .left {
        transform: rotateY(-90deg) translateZ(10rem);
    }

    .right {
        transform: rotateY(90deg) translateZ(10rem);
    }
} 